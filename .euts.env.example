# A config file listing the environment variables which can be used to customize the build and execution of the Test Stack
#
# The variables in this file are passed to docker-compose, which in turn passes most of them down to the containers,
# both at build time and run time.
#
# In order to use this file, first copy it to one named '.euts.env', then edit the copy:
# uncomment only the variables whose value you want to change.
#
# The default value for each variable is the one seen below (even though technically the actual default is set in docker-compose.yml).
#
# NB: if adding custom env vars check out out for possible naming conflicts: https://docs.docker.com/compose/reference/envvars/,
#     https://docs.docker.com/engine/reference/commandline/cli/, https://getcomposer.org/doc/03-cli.md#environment-variables

### Containers Build+Runtime Settings

# The project name is used as prefix for the name of the containers and images that will be built.
# This allows to build and run different copies of the stack in parallel.
# It is also used as part of the name of the custom composer 'vendor' dir that will be used.
#COMPOSE_PROJECT_NAME=euts

# Custom Timezone for the containers. Use 'none' as null value
#TESTSTACK_TZ=none

# Use alternative debian mirrors when building 'surrogate/helper' containers. Useful if there are problems with the default mirrors
# Use 'none' as null value
#TESTSTACK_DEBIAN_MIRROR=none

# The OS used for the container running the tests is Debian.
# Use alternative debian versions to have eg. different php versions onboard. Supported values: jessie, stretch, buster, bullseye
# (as well as sid, which we do not recommend to use).
# We recommend to pick the OS version which has available by default the the php version you require; you can also pick
# a custom php version using the TESTSTACK_PHP_VERSION (see below for details)
# php default versions in debian are: jessie: 5.6; stretch: 7.0; buster: 7.3; bullseye: 7.4
# php default versions in ubuntu are: xenial: 7.0; bionic: 7.2; focal: 7.4; jammy: 8.1
# Please note that the choice of OS version for the test container also affects the mysql client libraries available in
# it. The version of the mysql server is determined by the value of MYSQL_VERSION, described later. Picking bad combinations
# of versions might result in the test container not being able to connect to the db. Eg: jessie vs. mysql 8.0
#TESTSTACK_DEBIAN_VERSION=buster
# In order to use Ubuntu base images, you also have to change the value of this to ubuntu
#TESTSTACK_OS_VENDOR=debian

# Set this to 'false' if you do not want to update all the installed debian packages at the time of build in every container.
# Trick: you can change this to a different string and then run '...' to force a rebuild of the stack that will
# only include debian package updates. You could use f.e. a timestamp as value: 20180428
# NB: updating the base operating system is a good security practice, but it always comes with a risk of breaking things...
#TESTSTACK_UPDATE_OS_ON_BUILD=true

# Used for the subnet local to Docker.
# *NB*: UNUSED AT THE MOMENT
# *NB*: use only the first 3 bytes, as we assume a /24 subnet! No dot at the end.
# Note: private IP subnets go from 172.16.* to 172.31.*
# Note: if you change this value after building the stack once, the modified setting not have effect until:
#       1. you remove the network: `docker network rm euts_default`
#       2. you let docker recreate the network: ...
#       3. you attach all containers to the new network: ...
#TESTSTACK_SUBNET=172.19.30

# Where is stored (on the host computer) the data which we mount as volumes in the container.
# Modify this if you want to run multiple versions of the test stack in parallel or persisting their databases.
# Paths should be either absolute or relative to the folder where docker-compose.yml is
#TESTSTACK_APP_DIR=../..
#TESTSTACK_DATA_DIR=./data
#TESTSTACK_LOGS_DIR=./logs

# You can also define a custom php version to use. Supported values: 'default', '7.0' .. '7.4', '8.0' .. '8.1'
# Non-default php versions will be installed using the Sury repos, which might support or not the required OS/PHP combination
#TESTSTACK_PHP_VERSION=default

# Node.js settings
# Using `default` you will get the node version from the base OS. Other useable version strings are `14`, `16`, etc...
#TESTSTACK_NODE_VERSION=default

### Containers Runtime Settings

# Your user ID and group (as used on host computer) - used to eliminate file permissions problems between the containers
# and the host
#   On Ubuntu/Debian, the 1st user is generally 1000
#   To find out what your current IDs are, run the command `id`
#CONTAINER_USER_UID=1000
#CONTAINER_USER_GID=1000

# Set this to avoid 'Could not authenticate against github.com' errors - replace XXXXX with an actual github token
#COMPOSER_AUTH='{"github-oauth": {"github.com": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}}'
# Supported alternatives
#GITHUB_TOKEN=
#PACKAGIST_TOKEN=

### Database Settings
# NB: these are used when the db is created the 1st time the platform is executed. Changing them afterwards will have
# no effect (unless you delete the db data files)

# Either mysql or postgresql
# NB: Postgres support is not yet complete!
#DB_TYPE=mysql
#DB_ROOT_PASSWORD=root_test
#DB_EZ_USER=ezp
#DB_EZ_PASSWORD=ezp
#DB_EZ_DATABASE=behattestdb
# optional, use only to connect to other database servers that the built-in one
#DB_HOST=
# optional, use only to test problems with non-utf8 character sets
#DB_CHARSET=

### MySQL
# NB: starting in July 2022, with versions 5.7 and 8.0 you will get a MySQL container based on an Oracle base image, ie.
# not Debian any more. If you prefer to keep using the Debian base image, use version names such as `5.7-debian`
#MYSQL_VERSION=5.6
# Can switch between mysql and mariadb if desired
#DB_VENDOR=mysql

### PostgreSQL
#POSTGRESQL_VERSION=9.5

### Webserver Settings
# @todo

### Settings used for running tests, including setup of eZ

#SYMFONY_ENV=behat
#APP_ENV=behat
# Composer packages to install (besides the ones defined in the stock composer.json of your bundle) - space separated
#EZ_PACKAGES=
# Bundles to activate - space separated
#EZ_BUNDLES=
# Legacy extension to activate (only when running eZPublish-Community or eZPlatform with the Legacy-Bridge) - space separated
# NB: if your top-level project is not a bundle but a legacy extension, then its name must be the first in this list
#EZ_LEGACY_EXTENSIONS=
# Optional. A symfony yaml config file containing parameters and services used by the tests
#EZ_TEST_CONFIG_SYMFONY=

### Advanced Settings

# Optional. Use this instead of EZ_PACKAGES if you have a pre-calculated Composer lock file to use for installing
# the vendor packages. This can be used fe. to save time and memory when running the tests on CI platforms, esp. with php 5
#EZ_COMPOSER_LOCK=

# Env. variables which modify the behaviour of composer
#COMPOSER_IGNORE_PLATFORM_REQS=
#COMPOSER_MAX_PARALLEL_HTTP=
#COMPOSER_PREFER_LOWEST=
#COMPOSER_PROCESS_TIMEOUT=
