# An example GitHub Actions workflow for a bundle which aims to be compatible with both eZPublish 5 and eZPlatform 1 and 2.
# The workflow defines a single job being run on both git pushes and pull-requests. The job runs the bundle's tests on
# a wide range of eZ versions. Each test run also uses a different php version.
# We use kaliop/ezmigrationbundle as an example.

name: Continuous Integration

on: [push, pull_request]

jobs:
    test:
        runs-on: ${{ matrix.operating-system }}
        env:
            # These environment variables are used to configure the tanoconsulting/euts action used in the 2nd workflow
            # step below.
            # An alternative setup is to save all the environment variables for each case of the test matrix in a dedicated
            # configuration file, and pass it to the `configuration-file` input to the action
            # The complete list of environment variables supported by the action is documented in file .euts.env.example
            DB_HOST: localhost
            DB_TYPE: mysql
            DB_ROOT_PASSWORD: root
            DB_EZ_USER: ezp
            DB_EZ_PASSWORD: ezp
            DB_EZ_DATABASE: behattestdb
            PHP_VERSION: ${{ matrix.php }}
            EZ_COMPOSER_LOCK: ${{ matrix.ez_composer_lock }}
            EZ_BUNDLES: ${{ matrix.ez_bundles }}
            EZ_PACKAGES: ${{ matrix.ez_packages }}
            # Depending on the version of eZPlatform in use, you need to set up either SYMFONY_ENV or APP_ENV
            SYMFONY_ENV: behat
            #APP_ENV: behat
        strategy:
            # A large test matrix - running tests at least once for each stable PHP version, and across as many different
            # versions as possible of eZPublish / eZPlatform 1 and 2.
            # The version of mysql in use is always the same for all tests.
            # Besides the bundle under test (Kaliop\eZMigrationBundle\EzMigrationBundle), the tests require, when available
            # for the current eZ kernel, the presence of ezplatform-xmltext-fieldtype, tagsbundle, ez-matrix-bundle or
            # ezplatform-matrix-fieldtype.
            # Extra composer packages are required to be installed and extra Symfony Bundles are required to be activated
            # as dependencies, depending on the current eZ kernel, just to be able for the kernel to run with the 'behat' env.
            matrix:
                # @see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners for
                #      available os versions (note that we'd prefer sticking with ubuntu 18 as it comes with mysql 5.7,
                #      but that has been discontinued by GitHub)
                include:
                    # eZ Publish Platform, aka 5.4
                    - ezp: '5.4' # added just to make the GHA GUI nicer
                      php: '5.6'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\MatrixBundle\EzSystemsMatrixBundle Netgen\TagsBundle\NetgenTagsBundle'
                      # Composer takes too much time and memory for our dependencies when running on PHP 5.6.
                      # So we use a pre-calculated composer.lock file for installing dependencies instead of a list of
                      # packages (the lock file is stored within our bundle's source code)
                      # In this case ez_packages is ignored for dependencies installation, but it is used by teststack
                      # scripts as indicator of the ezp version in use
                      ez_packages: 'ezsystems/ezpublish-community:~2014.11.1'
                      ez_composer_lock: Tests/composer/composer-cp_2104.11.1.lock
                      operating-system: 'ubuntu-20.04'
                      code-coverage: ''
                    # eZ Platform 1
                    - ezp: '1.7'
                      php: '7.0'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\MatrixBundle\EzSystemsMatrixBundle Netgen\TagsBundle\NetgenTagsBundle'
                      ez_packages: 'ezsystems/ezplatform:~1.7.9 ezsystems/ezplatform-xmltext-fieldtype:^1.1 ezsystems/ez-matrix-bundle:^0.2.1 netgen/tagsbundle:^2.2 ezsystems/behatbundle:^6.3'
                      ez_composer_lock: ''
                      operating-system: 'ubuntu-20.04'
                      code-coverage: ''
                    - ezp: '1.13'
                      php: '7.1'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\MatrixBundle\EzSystemsMatrixBundle Netgen\TagsBundle\NetgenTagsBundle'
                      ez_packages: 'ezsystems/ezplatform:~1.13.5 ezsystems/ezplatform-xmltext-fieldtype:^1.1 ezsystems/ez-matrix-bundle:^0.2.1 netgen/tagsbundle:^2.2 ezsystems/behatbundle:^6.3'
                      ez_composer_lock: ''
                      operating-system: 'ubuntu-20.04'
                      code-coverage: ''
                    # eZ Platform 2
                    - ezp: '2.3'
                      php: '7.2'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\EzPlatformMatrixFieldtypeBundle\EzPlatformMatrixFieldtypeBundle EzSystems\EzPlatformGraphQL\EzSystemsEzPlatformGraphQLBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:~2.3.2 ezsystems/ezplatform-xmltext-fieldtype:^1.7 ezsystems/ezplatform-matrix-fieldtype:^1.0 netgen/tagsbundle:^3.2 ezsystems/behatbundle:^6.5 ezsystems/repository-forms:<=2.4 sensio/generator-bundle'
                      ez_composer_lock: ''
                      operating-system: 'ubuntu-22.04'
                      code-coverage: ''
                    - ezp: '2.4'
                      php: '7.3'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle EzSystems\EzPlatformMatrixFieldtypeBundle\EzPlatformMatrixFieldtypeBundle EzSystems\EzPlatformGraphQL\EzSystemsEzPlatformGraphQLBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:~2.4.2 ezsystems/ezplatform-xmltext-fieldtype:^1.8 ezsystems/ezplatform-matrix-fieldtype:^1.0 netgen/tagsbundle:^3.3 ezsystems/behatbundle:^6.5 sensio/generator-bundle'
                      ez_composer_lock: ''
                      operating-system: 'ubuntu-22.04'
                      code-coverage: ''
                    - ezp: '2.5'
                      php: '7.4'
                      ez_bundles: 'Kaliop\eZMigrationBundle\EzMigrationBundle EzSystems\EzPlatformXmlTextFieldTypeBundle\EzSystemsEzPlatformXmlTextFieldTypeBundle Netgen\TagsBundle\NetgenTagsBundle Lolautruche\EzCoreExtraBundle\EzCoreExtraBundle'
                      ez_packages: 'ezsystems/ezplatform:^2.5.15 ezsystems/ezplatform-xmltext-fieldtype:^1.9 netgen/tagsbundle:^3.4 ezsystems/behatbundle:^7.0 sensio/generator-bundle overblog/graphiql-bundle'
                      ez_composer_lock: ''
                      operating-system: 'ubuntu-22.04'
                      # triggers generation of code-coverage data and uploading it to codecov. Also supported: `scrutinizer`
                      code-coverage: 'codecov'
                    # eZ Platform 3 aka Ibexa DXP
                    # Rinse and repeat...
                    # For valid bundle/package combinations, see the .euts files in the folder `bundle_with_extra_dependencies`
        steps:
            # Optional: set up composer cache dir to persist across test runs; install extra sw packages; stop unused
            # services, etc

            -   name: check out the source code
                uses: actions/checkout@v3

            -   name: set up the test stack and run tests
                # if you prefer to always get the freshest version of the test stack, use `main` instead of a tagged version
                uses: tanoconsulting/euts@0.10.0
                with:
                    # Generate code coverage data and upload it to an online service, only for one case of the test matrix
                    code-coverage-service: ${{ matrix.code-coverage }}
                    # This is useful to avoid API rate limiting when downloading composer packages from github
                    repo-token: ${{ secrets.GITHUB_TOKEN }}
                    # As an alternative to defining all the environment variables used to configure the test stack
                    # in this file, we could save them in a dedicated file. Ex:
                    #configuration-file: Tests/environment/${{ matrix.config_file }}
                    # This can be changed to `containers` in case you want to use a custom mysql version or to run tests
                    # in containers anyway, eg. if your worker vm is not running ubuntu / has no php packages available.
                    # NB: when doing so, make sure the DB_HOST env var in your config is empty or set to `mysql`
                    #run-on: host
                    # Set this to anything not empty if you want to use a custom command to run tests.
                    # Take care that the path to the teststack scripts, such as ex. sfconsole.sh, will be different when
                    # running the stack on the host (./bin/) from when running it on containers (../teststack/bin)
                    #test-command: ...

            # To help troubleshooting failures, you can dump as much info as possible
            # TODO dump as well eZPlatform and eZ-Legacy logs
            #-
            #    name: troubleshoot
            #    if: ${{ failure() }}
            #    run: |
            #        systemctl list-units --all --type=service --no-pager | grep running
            #        ps auxwww
            #        dpkg --list | grep php
            #        env
            #        php -i
            #        sudo cat /var/log/php*.log
